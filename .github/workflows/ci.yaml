name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - "gcc-6"
          - "gcc-8"
          - "gcc-9"
          - "gcc-10"
          - "clang-3.9"
          - "clang-5.0"
          - "clang-10"
        cppstd: [11, 14, 17, 20]
        aggregates: [0, 1]
        exclude:
          - compiler: "gcc-6"
            cppstd: 17
          - compiler: "gcc-6"
            cppstd: 20
          - compiler: "clang-3.9"
            cppstd: 17
          - compiler: "clang-3.9"
            cppstd: 20
          - compiler: "clang-5.0"
            cppstd: 20

    steps:
        - uses: actions/checkout@v2

        - name: Install Packages
          run: |
            echo "deb http://archive.ubuntu.com/ubuntu bionic main universe" | sudo tee -a /etc/apt/sources.list
            sudo apt update
            compiler=${{matrix.compiler}}
            compiler=${compiler/gcc/g++}
            sudo apt install ninja-build ${compiler}
            pip install conan

        - name: Build
          run: |
            compiler=${{matrix.compiler}}
            toolset=${compiler%-*}
            version=${compiler#*-}
            compiler=${compiler/gcc/g++}
            compiler=${compiler/clang/clang++}

            if [[ "${{matrix.aggregates}}" -eq "1" ]]; then
              if [[ "${{matrix.cppstd}}" -le "14" ]]; then
                exit 0
              else
                conan install optional -if=build -b=missing \
                  -s compiler=${toolset} \
                  -s compiler.version=${version} \
                  -s compiler.cppstd=${{matrix.cppstd}} \
                  -s compiler.libcxx=libstdc++11 \
                  -e CXX=${compiler}
              fi
            fi

            conan install . -if=build -b=missing \
              -s compiler=${toolset} \
              -s compiler.version=${version} \
              -s compiler.cppstd=${{matrix.cppstd}} \
              -s compiler.libcxx=libstdc++11 \
              -e CXX=${compiler}
            cmake -Bbuild -H$GITHUB_WORKSPACE \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_CXX_COMPILER=${compiler} \
              -DCMAKE_CXX_STANDARD=${{matrix.cppstd}} \
              -DCMAKE_CXX_STANDARD_REQUIRED=ON \
              -DCMAKE_CXX_EXTENSIONS=OFF \
              -DHIPONY_ENUMERATE_AGGREGATES_ENABLED=${{matrix.aggregates}} \
              -G Ninja
            cmake --build build
