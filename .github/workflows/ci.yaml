name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  ubuntu:
    strategy:
      fail-fast: false
      matrix:
        include:
          - compiler: gcc
            version: "6"
            cppstd: "11 14 17"
            install: g++-6
          - compiler: gcc
            version: "8"
            cppstd: "11 14 17 20"
            install: g++-8
          - compiler: gcc
            version: "9"
            cppstd: "11 14 17 20"
            install: g++-9
          - compiler: gcc
            version: "10"
            cppstd: "11 14 17 20"
            install: g++-10
          - compiler: clang
            version: "3.9"
            cppstd: "11 14"
            install: clang-3.9
          - compiler: clang
            version: "5.0"
            cppstd: "11 14 17"
            install: clang-5.0
          - compiler: clang
            version: "10"
            cppstd: "11 14 17 20"
            install: clang-10

    runs-on: ubuntu-latest

    steps:
        - uses: actions/checkout@v2

        - name: Install Packages
          run: |
            echo "deb http://archive.ubuntu.com/ubuntu bionic main universe" | sudo tee -a /etc/apt/sources.list
            sudo apt update
            sudo apt install ninja-build ${{matrix.install}}
            pip install conan

        - name: Build
          run: |
            for cppstd in ${{matrix.cppstd}}
            do
              conan install . -if=build -b=missing \
                -s compiler=${{matrix.compiler}} \
                -s compiler.version=${{matrix.version}} \
                -s compiler.cppstd=${cppstd} \
                -s compiler.libcxx=libstdc++11 \
                -e CC=${{matrix.compiler}}-${{matrix.version}} \
                -e CXX=${{matrix.install}}
              cmake -Bbuild -H$GITHUB_WORKSPACE \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_C_COMPILER=${{matrix.compiler}}-${{matrix.version}} \
                -DCMAKE_CXX_COMPILER=${{matrix.compiler}}-${{matrix.version}} \
                -DCMAKE_CXX_STANDARD=${cppstd} \
                -DCMAKE_CXX_STANDARD_REQUIRED=ON \
                -DCMAKE_CXX_EXTENSIONS=OFF \
                -G Ninja
              cmake --build build
            done
