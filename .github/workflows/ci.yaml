name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  posix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - compiler: gcc
            version: "6"
            cppstd: "11 14 17"
            os: ubuntu-16.04
            install: g++-6
          - compiler: gcc
            version: "8"
            cppstd: "11 14 17 20"
            os: ubuntu-18.04
            install: g++-8
          - compiler: gcc
            version: "10"
            cppstd: "11 14 17 20"
            os: ubuntu-18.04
            install: g++-10
          - compiler: clang
            version: "3.5"
            cppstd: "11 14"
            os: ubuntu-16.04
            install: clang-3.5
          - compiler: clang
            version: "5.0"
            cppstd: "11 14 17"
            os: ubuntu-16.04
            install: clang-5.0
          - compiler: clang
            version: "7.0"
            cppstd: "11 14 17"
            os: ubuntu-18.04
            install: clang-7
          - compiler: clang
            version: "10"
            cppstd: "11 14 17 20"
            os: ubuntu-20.04
            install: clang-10

    runs-on: ${{matrix.os}}

    steps:
        - uses: actions/checkout@v2

        - name: Install Packages
          run: |
            sudo apt install ${{matrix.install}}
            pip install conan

        - name: Setup Toolchains
          run: |
            for cppstd in ${{matrix.cppstd}}
            do
            mkdir -p conan/profiles/
            tee -a conan/profiles/${{matrix.compiler}}-${{matrix.version}}-${{matrix.cppstd}} <<END
            include(default)
            [settings]
            compiler=${{matrix.compiler}}
            compiler.version=${{matrix.version}}
            compiler.cppstd=${{matrix.cppstd}}
            compiler.libcxx=libstdc++11
            END

            mkdir -p cmake/toolchains/
            tee -a cmake/toolchains/${{matrix.compiler}}-${{matrix.version}}-${{matrix.cppstd}} <<END
            set(CMAKE_C_COMPILER ${{matrix.compiler}}-${{matrix.version}})
            set(CMAKE_CXX_COMPILER ${{matrix.compiler}}-${{matrix.version}})

            set(CMAKE_CXX_STANDARD ${{matrix.cppstd}})
            set(CMAKE_CXX_STANDARD_REQUIRED ON)
            set(CMAKE_CXX_EXTENSIONS OFF)
            END
            done

        - name: Build
          run: |
            for cppstd in ${{matrix.cppstd}}
            do
              conan install . -if=build -b=missing -pr=conan/profiles/${{matrix.compiler}}-${{matrix.version}}-${{matrix.cppstd}}
              cd build
              cmake .. -G Ninja -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchains/${{matrix.compiler}}-${{matrix.version}}-${{matrix.cppstd}}
              cmake --build .
            done
